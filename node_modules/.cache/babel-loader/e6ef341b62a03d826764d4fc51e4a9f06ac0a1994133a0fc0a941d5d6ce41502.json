{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus } from \"../Redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = this.props.autorizedUserId;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }, this);\n  }\n}\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n  // дописал с комментов\n  function ComponentWithRouterProp(props) {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n}\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  autorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter)(ProfileContainer);","map":{"version":3,"names":["React","Profile","getUserProfile","getStatus","updateStatus","connect","useLocation","useNavigate","useParams","compose","jsxDEV","_jsxDEV","ProfileContainer","Component","componentDidMount","userId","props","router","params","autorizedUserId","render","profile","status","fileName","_jsxFileName","lineNumber","columnNumber","withRouter","_s","$RefreshSig$","ComponentWithRouterProp","location","navigate","mapStateToProps","state","profilePage","auth","isAuth"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\"\nimport Profile from './Profile'\nimport { getUserProfile, getStatus, updateStatus} from \"../Redux/profileReducer\"\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.router.params.userId\n        if (!userId) { userId = this.props.autorizedUserId }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() { return <Profile \n        {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} /> }\n}\n\nfunction withRouter(Component) { // дописал с комментов\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nlet mapStateToProps = (state) => ({ \n    profile: state.profilePage.profile, \n    status: state.profilePage.status,\n    autorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n})\n\nexport default compose(connect(mapStateToProps, { getUserProfile, getStatus, updateStatus}), withRouter) (ProfileContainer)\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,EAAEC,SAAS,EAAEC,YAAY,QAAO,yBAAyB;AAChF,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACtE,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,SAASZ,KAAK,CAACa,SAAS,CAAC;EAE3CC,iBAAiBA,CAAA,EAAG;IAChB,IAAIC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACH,MAAM;IAC5C,IAAI,CAACA,MAAM,EAAE;MAAEA,MAAM,GAAG,IAAI,CAACC,KAAK,CAACG,eAAe;IAAC;IACnD,IAAI,CAACH,KAAK,CAACd,cAAc,CAACa,MAAM,CAAC;IACjC,IAAI,CAACC,KAAK,CAACb,SAAS,CAACY,MAAM,CAAC;EAChC;EAEAK,MAAMA,CAAA,EAAG;IAAE,oBAAOT,OAAA,CAACV,OAAO;MAAA,GAClB,IAAI,CAACe,KAAK;MAAEK,OAAO,EAAE,IAAI,CAACL,KAAK,CAACK,OAAQ;MAACC,MAAM,EAAE,IAAI,CAACN,KAAK,CAACM,MAAO;MAAClB,YAAY,EAAE,IAAI,CAACY,KAAK,CAACZ;IAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAC;AAC1H;AAEA,SAASC,UAAUA,CAACd,SAAS,EAAE;EAAA,IAAAe,EAAA,GAAAC,YAAA;EAAE;EAC7B,SAASC,uBAAuBA,CAACd,KAAK,EAAE;IAAAY,EAAA;IACpC,IAAIG,QAAQ,GAAGzB,WAAW,CAAC,CAAC;IAC5B,IAAI0B,QAAQ,GAAGzB,WAAW,CAAC,CAAC;IAC5B,IAAIW,MAAM,GAAGV,SAAS,CAAC,CAAC;IACxB,oBACIG,OAAA,CAACE,SAAS;MAAA,GACFG,KAAK;MACTC,MAAM,EAAE;QAAEc,QAAQ;QAAEC,QAAQ;QAAEd;MAAO;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAEV;EAACE,EAAA,CAVQE,uBAAuB;IAAA,QACbxB,WAAW,EACXC,WAAW,EACbC,SAAS;EAAA;EAS1B,OAAOsB,uBAAuB;AAClC;AAEA,IAAIG,eAAe,GAAIC,KAAK,KAAM;EAC9Bb,OAAO,EAAEa,KAAK,CAACC,WAAW,CAACd,OAAO;EAClCC,MAAM,EAAEY,KAAK,CAACC,WAAW,CAACb,MAAM;EAChCH,eAAe,EAAEe,KAAK,CAACE,IAAI,CAACrB,MAAM;EAClCsB,MAAM,EAAEH,KAAK,CAACE,IAAI,CAACC;AACvB,CAAC,CAAC;AAEF,eAAe5B,OAAO,CAACJ,OAAO,CAAC4B,eAAe,EAAE;EAAE/B,cAAc;EAAEC,SAAS;EAAEC;AAAY,CAAC,CAAC,EAAEuB,UAAU,CAAC,CAAEf,gBAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}