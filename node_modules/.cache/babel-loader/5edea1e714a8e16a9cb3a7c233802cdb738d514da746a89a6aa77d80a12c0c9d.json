{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Profile from './Profile';\nimport { setUserProfile } from \"../Redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProfileContainer extends React.Component {\n  // коммент в моем исполнении \n\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n    if (!this.userId) {\n      this.userId = '2';\n    }\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}?`).then(response => {\n      this.props.setUserProfile(response.data);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }, this);\n  }\n}\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile\n});\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n  // дописал с комментов\n  function ComponentWithRouterProp(props) {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n}\nexport default connect(mapStateToProps, {\n  setUserProfile\n})(withRouter(ProfileContainer));\n//export default connect (mapStateToProps, {setUserProfile})(ProfileContainer)\n//let userId = this.props.router.params.userId     видео 50 мин 14","map":{"version":3,"names":["React","axios","Profile","setUserProfile","connect","useLocation","useNavigate","useParams","jsxDEV","_jsxDEV","ProfileContainer","Component","componentDidMount","userId","props","router","params","get","then","response","data","render","profile","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state","profilePage","withRouter","_s","$RefreshSig$","ComponentWithRouterProp","location","navigate"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\nimport Profile from './Profile'\nimport { setUserProfile } from \"../Redux/profileReducer\"\nimport { connect } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nclass ProfileContainer extends React.Component {\n\n     // коммент в моем исполнении \n\n    componentDidMount() {\n        let userId = this.props.router.params.userId\n        if (!this.userId) {this.userId = '2'}\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userId}?`)\n            .then(response => { this.props.setUserProfile(response.data) })\n    }\n    render() { return <Profile {...this.props} profile={this.props.profile} /> }\n}\n\nlet mapStateToProps = (state) => ({ profile: state.profilePage.profile })\n\n\nfunction withRouter(Component) { // дописал с комментов\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default connect(mapStateToProps, { setUserProfile })(withRouter(ProfileContainer))\n//export default connect (mapStateToProps, {setUserProfile})(ProfileContainer)\n//let userId = this.props.router.params.userId     видео 50 мин 14\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,gBAAgB,SAASV,KAAK,CAACW,SAAS,CAAC;EAE1C;;EAEDC,iBAAiBA,CAAA,EAAG;IAChB,IAAIC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACH,MAAM;IAC5C,IAAI,CAAC,IAAI,CAACA,MAAM,EAAE;MAAC,IAAI,CAACA,MAAM,GAAG,GAAG;IAAA;IACpCZ,KAAK,CAACgB,GAAG,CAAE,wDAAuDJ,MAAO,GAAE,CAAC,CACvEK,IAAI,CAACC,QAAQ,IAAI;MAAE,IAAI,CAACL,KAAK,CAACX,cAAc,CAACgB,QAAQ,CAACC,IAAI,CAAC;IAAC,CAAC,CAAC;EACvE;EACAC,MAAMA,CAAA,EAAG;IAAE,oBAAOZ,OAAA,CAACP,OAAO;MAAA,GAAK,IAAI,CAACY,KAAK;MAAEQ,OAAO,EAAE,IAAI,CAACR,KAAK,CAACQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAC;AAC/E;AAEA,IAAIC,eAAe,GAAIC,KAAK,KAAM;EAAEN,OAAO,EAAEM,KAAK,CAACC,WAAW,CAACP;AAAQ,CAAC,CAAC;AAGzE,SAASQ,UAAUA,CAACnB,SAAS,EAAE;EAAA,IAAAoB,EAAA,GAAAC,YAAA;EAAE;EAC7B,SAASC,uBAAuBA,CAACnB,KAAK,EAAE;IAAAiB,EAAA;IACpC,IAAIG,QAAQ,GAAG7B,WAAW,CAAC,CAAC;IAC5B,IAAI8B,QAAQ,GAAG7B,WAAW,CAAC,CAAC;IAC5B,IAAIU,MAAM,GAAGT,SAAS,CAAC,CAAC;IACxB,oBACIE,OAAA,CAACE,SAAS;MAAA,GACFG,KAAK;MACTC,MAAM,EAAE;QAAEmB,QAAQ;QAAEC,QAAQ;QAAEnB;MAAO;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAEV;EAACK,EAAA,CAVQE,uBAAuB;IAAA,QACb5B,WAAW,EACXC,WAAW,EACbC,SAAS;EAAA;EAS1B,OAAO0B,uBAAuB;AAClC;AAEA,eAAe7B,OAAO,CAACuB,eAAe,EAAE;EAAExB;AAAe,CAAC,CAAC,CAAC2B,UAAU,CAACpB,gBAAgB,CAAC,CAAC;AACzF;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}