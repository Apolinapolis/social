{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx\";\nimport React from 'react';\nimport Post from './Post/Post';\nimport s from './myPosts.module.css';\nimport { Textarea } from '../../common/FormControls';\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = /*#__PURE__*/React.memo(_c = props => {\n  alert(\"memo\");\n  let postsElements = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likesCount: p.likesCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 46\n  }, this));\n  let onAddPost = values => props.addPost(values.myPostText);\n  let maxlength10 = maxLengthCreator(10);\n  const AddNewPostForm = props => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: props.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"myPostText\",\n          component: Textarea,\n          validate: [required, maxlength10],\n          placeholder: \"cool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Add Post \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Post remove \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  };\n  const ReactPostsTextArea = reduxForm({\n    form: \"profileAddNewPostForm\"\n  })(AddNewPostForm);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Super Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactPostsTextArea, {\n      onSubmit: onAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n});\n_c2 = MyPosts;\nexport default MyPosts;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyPosts$React.memo\");\n$RefreshReg$(_c2, \"MyPosts\");","map":{"version":3,"names":["React","Post","s","Textarea","Field","reduxForm","required","maxLengthCreator","jsxDEV","_jsxDEV","MyPosts","memo","_c","props","alert","postsElements","posts","map","p","message","likesCount","fileName","_jsxFileName","lineNumber","columnNumber","onAddPost","values","addPost","myPostText","maxlength10","AddNewPostForm","onSubmit","handleSubmit","children","name","component","validate","placeholder","ReactPostsTextArea","form","className","postsBlock","_c2","$RefreshReg$"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx"],"sourcesContent":["import React from 'react'\nimport Post from './Post/Post'\nimport s from './myPosts.module.css'\nimport { Textarea } from '../../common/FormControls'\nimport { Field, reduxForm } from \"redux-form\"\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators'\n\n\nconst MyPosts = React.memo (props => {\n    alert(\"memo\")\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />)\n    let onAddPost = (values) => props.addPost(values.myPostText)\n    let maxlength10 = maxLengthCreator(10) \n\n    const AddNewPostForm = (props) => {\n        return <form onSubmit={props.handleSubmit} >\n        <div><Field name = 'myPostText' component = {Textarea} validate = {[required , maxlength10]} placeholder = \"cool\" /></div>\n        <div><button> Add Post </button><button> Post remove </button></div>\n        </form>\n    }\n\n    const ReactPostsTextArea = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm)\n\n    return <div className={s.postsBlock}>\n        <h3>My Super Posts</h3>\n       <ReactPostsTextArea onSubmit={onAddPost}/>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n    </div>\n})\n\nexport default MyPosts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}