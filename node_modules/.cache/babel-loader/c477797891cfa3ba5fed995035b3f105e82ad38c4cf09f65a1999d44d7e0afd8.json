{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx\";\nimport Post from './Post/Post';\nimport s from './myPosts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = props => {\n  let posts = [{\n    id: 1,\n    likesCount: 12,\n    message: \"Hello, BRO\"\n  }, {\n    id: 2,\n    likesCount: 4,\n    message: \"Hello, BRrrrrr\"\n  }, {\n    id: 3,\n    likesCount: 51,\n    message: \"Hell Oy\"\n  }, {\n    id: 4,\n    likesCount: 614,\n    message: \"airuqp ppq uqweh b\"\n  }, {\n    id: 5,\n    likesCount: 111,\n    message: \"It`s my first post!\"\n  }];\n  let postsElements = posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likesCount: p.likesCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 38\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Post remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["Post","s","jsxDEV","_jsxDEV","MyPosts","props","posts","id","likesCount","message","postsElements","map","p","fileName","_jsxFileName","lineNumber","columnNumber","className","postsBlock","children","_c","$RefreshReg$"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx"],"sourcesContent":["import Post from './Post/Post'\nimport s from './myPosts.module.css'\n\nconst MyPosts = (props) => {\n\n    let posts = [\n        {id:1, likesCount: 12, message: \"Hello, BRO\"},\n        {id:2, likesCount: 4, message: \"Hello, BRrrrrr\"},\n        {id:3, likesCount: 51, message: \"Hell Oy\"},\n        {id:4, likesCount: 614, message: \"airuqp ppq uqweh b\"},\n        {id:5, likesCount: 111, message: \"It`s my first post!\"},\n    ]\n\n    let postsElements = posts.map(p=><Post message={p.message} likesCount = {p.likesCount}/>)\n\n    return <div className={s.postsBlock}>\n        <h3>My post</h3>\n        <div>\n        <div><textarea></textarea></div>\n            <div><button>Add Post</button>\n            <button>Post remove</button></div>\n        </div>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n    </div>\n}\n\nexport default MyPosts"],"mappings":";AAAA,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAOC,CAAC,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAEvB,IAAIC,KAAK,GAAG,CACR;IAACC,EAAE,EAAC,CAAC;IAAEC,UAAU,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAY,CAAC,EAC7C;IAACF,EAAE,EAAC,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAgB,CAAC,EAChD;IAACF,EAAE,EAAC,CAAC;IAAEC,UAAU,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAS,CAAC,EAC1C;IAACF,EAAE,EAAC,CAAC;IAAEC,UAAU,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAoB,CAAC,EACtD;IAACF,EAAE,EAAC,CAAC;IAAEC,UAAU,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAqB,CAAC,CAC1D;EAED,IAAIC,aAAa,GAAGJ,KAAK,CAACK,GAAG,CAACC,CAAC,iBAAET,OAAA,CAACH,IAAI;IAACS,OAAO,EAAEG,CAAC,CAACH,OAAQ;IAACD,UAAU,EAAII,CAAC,CAACJ;EAAW;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC;EAEzF,oBAAOb,OAAA;IAAKc,SAAS,EAAEhB,CAAC,CAACiB,UAAW;IAAAC,QAAA,gBAChChB,OAAA;MAAAgB,QAAA,EAAI;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBb,OAAA;MAAAgB,QAAA,gBACAhB,OAAA;QAAAgB,QAAA,eAAKhB,OAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5Bb,OAAA;QAAAgB,QAAA,gBAAKhB,OAAA;UAAAgB,QAAA,EAAQ;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9Bb,OAAA;UAAAgB,QAAA,EAAQ;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNb,OAAA;MAAKc,SAAS,EAAEhB,CAAC,CAACK,KAAM;MAAAa,QAAA,EACnBT;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV,CAAC;AAAAI,EAAA,GAvBKhB,OAAO;AAyBb,eAAeA,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}