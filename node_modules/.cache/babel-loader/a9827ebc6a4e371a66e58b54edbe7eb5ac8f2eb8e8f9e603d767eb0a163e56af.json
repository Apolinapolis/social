{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPostsContainer.jsx\";\nimport React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../Redux/profileReducer';\nimport MyPosts from './myPosts';\nimport StoreContext from '../../../storeContext';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPostsContainer = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let state = store.getState();\n      let addPost = () => store.dispatch(addPostActionCreator());\n      let onPostChange = text => {\n        let action = updateNewPostTextActionCreator(text);\n        store.dispatch(action);\n      };\n      return /*#__PURE__*/_jsxDEV(MyPosts, {\n        updateNewPostText: onPostChange,\n        addPost: addPost,\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 24\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPostsContainer;\nlet mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => dispatch(addPostActionCreator()),\n    onPostChange: text => dispatch(updateNewPostTextActionCreator(text))\n  };\n};\nconst sMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\nvar _c;\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","StoreContext","connect","jsxDEV","_jsxDEV","MyPostsContainer","props","Consumer","children","store","state","getState","addPost","dispatch","onPostChange","text","action","updateNewPostText","posts","profilePage","newPostText","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","mapDispatchToProps","sMyPostsContainer","$RefreshReg$"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPostsContainer.jsx"],"sourcesContent":["import React from 'react'\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../Redux/profileReducer'\nimport MyPosts from './myPosts'\nimport StoreContext from '../../../storeContext'\nimport { connect } from 'react-redux'\n\nconst MyPostsContainer = (props) => {\n    return (\n        <StoreContext.Consumer>\n            {(store) => {\n                let state = store.getState();\n                let addPost = () => store.dispatch(addPostActionCreator());\n                let onPostChange = (text) => {\n                    let action = updateNewPostTextActionCreator(text)\n                    store.dispatch(action)\n                }\n                return <MyPosts updateNewPostText={onPostChange}\n                    addPost={addPost}\n                    posts={state.profilePage.posts}\n                    newPostText={state.profilePage.newPostText} />\n            }\n        }\n        </StoreContext.Consumer>\n    )\n}\nlet mapStateToProps = (state) => {return{\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n}}\nlet mapDispatchToProps = (dispatch) => {return{\n    addPost:() => dispatch(addPostActionCreator()),\n    onPostChange: (text) => dispatch(updateNewPostTextActionCreator(text))\n}}\n\nconst sMyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\nexport default MyPostsContainer"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,8BAA8B,QAAQ,4BAA4B;AACjG,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,uBAAuB;AAChD,SAASC,OAAO,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAChC,oBACIF,OAAA,CAACH,YAAY,CAACM,QAAQ;IAAAC,QAAA,EAChBC,KAAK,IAAK;MACR,IAAIC,KAAK,GAAGD,KAAK,CAACE,QAAQ,CAAC,CAAC;MAC5B,IAAIC,OAAO,GAAGA,CAAA,KAAMH,KAAK,CAACI,QAAQ,CAACf,oBAAoB,CAAC,CAAC,CAAC;MAC1D,IAAIgB,YAAY,GAAIC,IAAI,IAAK;QACzB,IAAIC,MAAM,GAAGjB,8BAA8B,CAACgB,IAAI,CAAC;QACjDN,KAAK,CAACI,QAAQ,CAACG,MAAM,CAAC;MAC1B,CAAC;MACD,oBAAOZ,OAAA,CAACJ,OAAO;QAACiB,iBAAiB,EAAEH,YAAa;QAC5CF,OAAO,EAAEA,OAAQ;QACjBM,KAAK,EAAER,KAAK,CAACS,WAAW,CAACD,KAAM;QAC/BE,WAAW,EAAEV,KAAK,CAACS,WAAW,CAACC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEkB,CAAC;AAEhC,CAAC;AAAAC,EAAA,GAlBKpB,gBAAgB;AAmBtB,IAAIqB,eAAe,GAAIhB,KAAK,IAAK;EAAC,OAAM;IACpCQ,KAAK,EAAER,KAAK,CAACS,WAAW,CAACD,KAAK;IAC9BE,WAAW,EAAEV,KAAK,CAACS,WAAW,CAACC;EACnC,CAAC;AAAA,CAAC;AACF,IAAIO,kBAAkB,GAAId,QAAQ,IAAK;EAAC,OAAM;IAC1CD,OAAO,EAACA,CAAA,KAAMC,QAAQ,CAACf,oBAAoB,CAAC,CAAC,CAAC;IAC9CgB,YAAY,EAAGC,IAAI,IAAKF,QAAQ,CAACd,8BAA8B,CAACgB,IAAI,CAAC;EACzE,CAAC;AAAA,CAAC;AAEF,MAAMa,iBAAiB,GAAG1B,OAAO,CAACwB,eAAe,EAACC,kBAAkB,CAAC,CAAC3B,OAAO,CAAC;AAC9E,eAAeK,gBAAgB;AAAA,IAAAoB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}