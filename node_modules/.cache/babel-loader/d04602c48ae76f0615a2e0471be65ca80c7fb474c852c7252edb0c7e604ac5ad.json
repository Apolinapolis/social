{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx\";\nimport React, { Component } from 'react';\nimport Post from './Post/Post';\nimport s from './myPosts.module.css';\nimport { Textarea } from '../../common/FormControls';\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MyPosts extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps != this.props && nextState != this.state;\n  }\n  render() {\n    alert(\"my post render\");\n    let postsElements = this.props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n      message: p.message,\n      likesCount: p.likesCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 51\n    }, this));\n    let onAddPost = values => this.props.addPost(values.myPostText);\n    let maxlength10 = maxLengthCreator(10);\n    const AddNewPostForm = props => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"myPostText\",\n            component: Textarea,\n            validate: [required, maxlength10],\n            placeholder: \"cool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" Add Post \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" Post remove \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }, this);\n    };\n    const ReactPostsTextArea = reduxForm({\n      form: \"profileAddNewPostForm\"\n    })(AddNewPostForm);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postsBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Super Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPostsTextArea, {\n        onSubmit: onAddPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.posts,\n        children: postsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default MyPosts;","map":{"version":3,"names":["React","Component","Post","s","Textarea","Field","reduxForm","required","maxLengthCreator","jsxDEV","_jsxDEV","MyPosts","shouldComponentUpdate","nextProps","nextState","props","state","render","alert","postsElements","posts","map","p","message","likesCount","fileName","_jsxFileName","lineNumber","columnNumber","onAddPost","values","addPost","myPostText","maxlength10","AddNewPostForm","onSubmit","handleSubmit","children","name","component","validate","placeholder","ReactPostsTextArea","form","className","postsBlock"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Post from './Post/Post'\nimport s from './myPosts.module.css'\nimport { Textarea } from '../../common/FormControls'\nimport { Field, reduxForm } from \"redux-form\"\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators'\n\n\nclass MyPosts extends Component {\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps != this.props && nextState != this.state\n    }\n    render (){\n        alert(\"my post render\")\n    let postsElements = this.props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />)\n    let onAddPost = (values) => this.props.addPost(values.myPostText)\n    let maxlength10 = maxLengthCreator(10) \n\n    const AddNewPostForm = (props) => {\n        return <form onSubmit={props.handleSubmit} >\n        <div><Field name = 'myPostText' component = {Textarea} validate = {[required , maxlength10]} placeholder = \"cool\" /></div>\n        <div><button> Add Post </button><button> Post remove </button></div>\n        </form>\n    }\n\n    const ReactPostsTextArea = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm)\n\n    return <div className={s.postsBlock}>\n        <h3>My Super Posts</h3>\n       <ReactPostsTextArea onSubmit={onAddPost}/>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n    </div>}\n}\n\nexport default MyPosts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}