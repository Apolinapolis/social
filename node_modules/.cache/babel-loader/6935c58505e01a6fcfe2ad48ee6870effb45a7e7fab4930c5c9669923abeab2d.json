{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Dialogs/DialogsContainer.jsx\";\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../Redux/dialogsReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\nlet AuthRedirectComponent = props => {\n  if (!this.props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 37\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n_c = AuthRedirectComponent;\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default DialogsContainer;\nvar _c;\n$RefreshReg$(_c, \"AuthRedirectComponent\");","map":{"version":3,"names":["Dialogs","connect","updateNewMessageBodyCreator","sendMessageCreator","jsxDEV","_jsxDEV","mapStateToProps","state","dialogsPage","isAuth","auth","mapDispatchToProps","dispatch","sendMessage","updateNewMessageBody","body","AuthRedirectComponent","props","Navigate","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","DialogsContainer","$RefreshReg$"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../Redux/dialogsReducer';\n\n\nlet mapStateToProps = (state) => {return{\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth,\n}}\nlet mapDispatchToProps = (dispatch) => {return{\n    sendMessage: () => {dispatch(sendMessageCreator())},\n    updateNewMessageBody: (body) => {dispatch(updateNewMessageBodyCreator(body))}\n}}\n\nlet AuthRedirectComponent = (props)=>{\n    if (!this.props.isAuth) {return <Navigate to={\"/login\"}/>}\n    return <Dialogs {...props} />\n}\n\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(AuthRedirectComponent)\n\nexport default DialogsContainer"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,2BAA2B,EAAEC,kBAAkB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1F,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAAC,OAAM;IACpCC,WAAW,EAAED,KAAK,CAACC,WAAW;IAC9BC,MAAM,EAAEF,KAAK,CAACG,IAAI,CAACD;EACvB,CAAC;AAAA,CAAC;AACF,IAAIE,kBAAkB,GAAIC,QAAQ,IAAK;EAAC,OAAM;IAC1CC,WAAW,EAAEA,CAAA,KAAM;MAACD,QAAQ,CAACT,kBAAkB,CAAC,CAAC,CAAC;IAAA,CAAC;IACnDW,oBAAoB,EAAGC,IAAI,IAAK;MAACH,QAAQ,CAACV,2BAA2B,CAACa,IAAI,CAAC,CAAC;IAAA;EAChF,CAAC;AAAA,CAAC;AAEF,IAAIC,qBAAqB,GAAIC,KAAK,IAAG;EACjC,IAAI,CAAC,IAAI,CAACA,KAAK,CAACR,MAAM,EAAE;IAAC,oBAAOJ,OAAA,CAACa,QAAQ;MAACC,EAAE,EAAE;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;EACzD,oBAAOlB,OAAA,CAACL,OAAO;IAAA,GAAKiB;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACjC,CAAC;AAAAC,EAAA,GAHGR,qBAAqB;AAKzB,MAAMS,gBAAgB,GAAGxB,OAAO,CAACK,eAAe,EAACK,kBAAkB,CAAC,CAACK,qBAAqB,CAAC;AAE3F,eAAeS,gBAAgB;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}