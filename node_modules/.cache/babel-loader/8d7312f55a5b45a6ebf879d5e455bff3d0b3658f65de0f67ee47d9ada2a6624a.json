{"ast":null,"code":"import{stopSubmit}from\"redux-form\";import{authAPI,securityAPI}from\"../../API/api\";const SET_USER_DATA=\"SET_USER_DATA\";const GET_CAPTCHA_URL_SUCCESS=\"GET_CAPTCHA_URL_SUCCESS\";let initialState={userId:null,// need hardcode\nemail:null,login:null,isAuth:false,captchaUrl:null};const authReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER_DATA:case GET_CAPTCHA_URL_SUCCESS:return{...state,...action.payload};default:return state;}};export const setUserData=(userId,email,login,isAuth)=>({type:SET_USER_DATA,payload:{userId,email,login,isAuth}});export const getCaptchaUrlSuccess=captchaUrl=>({type:GET_CAPTCHA_URL_SUCCESS,payload:{captchaUrl}});export const getAuthUserData=()=>async dispatch=>{const response=await authAPI.me();if(response.data.resultCode===0){let{id,email,login}=response.data.data;dispatch(setUserData(id,email,login,true));}};export const login=(email,password,rememberMe,captcha)=>async dispatch=>{let response=await authAPI.login(email,password,rememberMe,captcha);if(response.data.resultCode===0){dispatch(getAuthUserData());}else{if(response.data.resultCode===10){dispatch(getCaptchaUrl());}}{let message=response.data.messages.length>0?response.data.messages[0]:\"Some error\";dispatch(stopSubmit(\"login\",{_error:message}));}};export const logout=()=>async dispatch=>{let response=await authAPI.logout();if(response.data.resultCode===0){dispatch(setUserData(null,null,null,false));}};export const getCaptchaUrl=()=>async dispatch=>{const response=await securityAPI.getCaptchaUrl();const captchaUrl=response.data.url;dispatch(getCaptchaUrlSuccess(captchaUrl));};export default authReducer;","map":{"version":3,"names":["stopSubmit","authAPI","securityAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","userId","email","login","isAuth","captchaUrl","authReducer","state","arguments","length","undefined","action","type","payload","setUserData","getCaptchaUrlSuccess","getAuthUserData","dispatch","response","me","data","resultCode","id","password","rememberMe","captcha","getCaptchaUrl","message","messages","_error","logout","url"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Redux/authReducer.js"],"sourcesContent":["import { stopSubmit } from \"redux-form\";\nimport { authAPI, securityAPI } from \"../../API/api\";\n\nconst SET_USER_DATA = \"SET_USER_DATA\"\nconst GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\"\n\nlet initialState = {\n  userId: null,  // need hardcode\n  email: null,\n  login: null,\n  isAuth: false,\n  captchaUrl: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n    case GET_CAPTCHA_URL_SUCCESS:\n      return {...state, ...action.payload}\n    default: return state\n}}\n\nexport const setUserData = (userId, email, login, isAuth ) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth} })\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl} })\n\nexport const getAuthUserData = () => async (dispatch) => {\n    const response = await authAPI.me();\n  if (response.data.resultCode === 0) {\n    let { id, email, login } = response.data.data;\n    dispatch(setUserData(id, email, login, true));\n  }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n  let response = await authAPI.login(email, password, rememberMe, captcha);\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    if (response.data.resultCode === 10){\n      dispatch(getCaptchaUrl())\n    }\n  }\n  \n  \n  {\n    let message = response.data.messages.length > 0\n        ? response.data.messages[0]\n        : \"Some error\";\n    dispatch(stopSubmit(\"login\", { _error: message }));\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  let response = await authAPI.logout();\n  if (response.data.resultCode === 0) {\n    dispatch(setUserData(null, null, null, false));\n  }\n};\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n  const response = await securityAPI.getCaptchaUrl()\n  const captchaUrl = response.data.url\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\n  \n};\n\n\n\nexport default authReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}