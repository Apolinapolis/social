{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from './Profile';\nimport { getUserProfile } from \"../Redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../Hoc/WithAuthRedirect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = 30773;\n    }\n    this.props.getUserProfile(userId);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }, this);\n  }\n}\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n_c = AuthRedirectComponent;\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile\n});\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n  // дописал с комментов\n  function ComponentWithRouterProp(props) {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n}\nexport default connect(mapStateToProps, {\n  getUserProfile\n})(withRouter(AuthRedirectComponent));\nvar _c;\n$RefreshReg$(_c, \"AuthRedirectComponent\");","map":{"version":3,"names":["React","Profile","getUserProfile","connect","Navigate","useLocation","useNavigate","useParams","withAuthRedirect","jsxDEV","_jsxDEV","ProfileContainer","Component","componentDidMount","userId","props","router","params","render","profile","fileName","_jsxFileName","lineNumber","columnNumber","AuthRedirectComponent","_c","mapStateToPropsForRedirect","state","isAuth","auth","mapStateToProps","profilePage","withRouter","_s","$RefreshSig$","ComponentWithRouterProp","location","navigate","$RefreshReg$"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\"\nimport Profile from './Profile'\nimport { getUserProfile} from \"../Redux/profileReducer\"\nimport { connect } from \"react-redux\";\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport {withAuthRedirect} from \"../Hoc/WithAuthRedirect\"\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.router.params.userId\n        if (!userId) { userId = 30773 }\n        this.props.getUserProfile(userId)\n    }\n\n    render() { return <Profile {...this.props} profile={this.props.profile} /> }\n}\n\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer) \n\nlet mapStateToPropsForRedirect = (state) => ({ isAuth: state.auth.isAuth })\nlet mapStateToProps = (state) => ({ profile: state.profilePage.profile })\n\nfunction withRouter(Component) { // дописал с комментов\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default connect(mapStateToProps, { getUserProfile })(withRouter(AuthRedirectComponent))\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,QAAO,yBAAyB;AACvD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAChF,SAAQC,gBAAgB,QAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,gBAAgB,SAASX,KAAK,CAACY,SAAS,CAAC;EAE3CC,iBAAiBA,CAAA,EAAG;IAChB,IAAIC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACH,MAAM;IAC5C,IAAI,CAACA,MAAM,EAAE;MAAEA,MAAM,GAAG,KAAK;IAAC;IAC9B,IAAI,CAACC,KAAK,CAACb,cAAc,CAACY,MAAM,CAAC;EACrC;EAEAI,MAAMA,CAAA,EAAG;IAAE,oBAAOR,OAAA,CAACT,OAAO;MAAA,GAAK,IAAI,CAACc,KAAK;MAAEI,OAAO,EAAE,IAAI,CAACJ,KAAK,CAACI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAC;AAC/E;AAEA,IAAIC,qBAAqB,GAAGhB,gBAAgB,CAACG,gBAAgB,CAAC;AAAAc,EAAA,GAA1DD,qBAAqB;AAEzB,IAAIE,0BAA0B,GAAIC,KAAK,KAAM;EAAEC,MAAM,EAAED,KAAK,CAACE,IAAI,CAACD;AAAO,CAAC,CAAC;AAC3E,IAAIE,eAAe,GAAIH,KAAK,KAAM;EAAER,OAAO,EAAEQ,KAAK,CAACI,WAAW,CAACZ;AAAQ,CAAC,CAAC;AAEzE,SAASa,UAAUA,CAACpB,SAAS,EAAE;EAAA,IAAAqB,EAAA,GAAAC,YAAA;EAAE;EAC7B,SAASC,uBAAuBA,CAACpB,KAAK,EAAE;IAAAkB,EAAA;IACpC,IAAIG,QAAQ,GAAG/B,WAAW,CAAC,CAAC;IAC5B,IAAIgC,QAAQ,GAAG/B,WAAW,CAAC,CAAC;IAC5B,IAAIW,MAAM,GAAGV,SAAS,CAAC,CAAC;IACxB,oBACIG,OAAA,CAACE,SAAS;MAAA,GACFG,KAAK;MACTC,MAAM,EAAE;QAAEoB,QAAQ;QAAEC,QAAQ;QAAEpB;MAAO;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAEV;EAACU,EAAA,CAVQE,uBAAuB;IAAA,QACb9B,WAAW,EACXC,WAAW,EACbC,SAAS;EAAA;EAS1B,OAAO4B,uBAAuB;AAClC;AAEA,eAAehC,OAAO,CAAC2B,eAAe,EAAE;EAAE5B;AAAe,CAAC,CAAC,CAAC8B,UAAU,CAACR,qBAAqB,CAAC,CAAC;AAAA,IAAAC,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}