{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/common/paginator/Paginator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport s from \"./Paginator.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChenged,\n  portionSize = 10\n}) => {\n  _s();\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  ;\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.paginator,\n    children: [\" \", portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 60\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: currentPage === p && s.selectedPage,\n        onClick: e => onPageChenged(p),\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 8\n  }, this);\n};\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","s","jsxDEV","_jsxDEV","Paginator","totalItemsCount","pageSize","currentPage","onPageChenged","portionSize","_s","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","paginator","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","p","map","selectedPage","e","_c","$RefreshReg$"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/common/paginator/Paginator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport s from \"./Paginator.module.css\"\n\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChenged, portionSize = 10 }) => {\n\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) { pages.push(i) };\n\n  let portionCount = Math.ceil(pagesCount / portionSize)\n  let [portionNumber, setPortionNumber] = useState(1)\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n  let rightPortionPageNumber = portionNumber * portionSize\n\nreturn <div className={s.paginator}> {portionNumber > 1 && <button onClick={ () => {setPortionNumber(portionNumber - 1) }}>PREV</button>}\n\n  {pages.filter( p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n  .map( (p) => { return <span className={currentPage === p && s.selectedPage} key={p} onClick={(e) => onPageChenged(p)}>{p}</span>})}\n       \n  {portionCount > portionNumber && <button onClick={ () => {setPortionNumber(portionNumber + 1) }}>Next</button>\n      }\n </div>   \n}\n\nexport default Paginator"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,CAAC,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,IAAIC,SAAS,GAAGA,CAAC;EAAEC,eAAe;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,aAAa;EAAEC,WAAW,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAE/F,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACR,eAAe,GAAGC,QAAQ,CAAC;EAEtD,IAAIQ,KAAK,GAAG,EAAE;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IAAED,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;EAAC;EAAC;EAEvD,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAI,CAACF,UAAU,GAAGF,WAAW,CAAC;EACtD,IAAI,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnD,IAAIoB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAC,IAAIT,WAAW,GAAG,CAAC;EACjE,IAAIY,sBAAsB,GAAGH,aAAa,GAAGT,WAAW;EAE1D,oBAAON,OAAA;IAAKmB,SAAS,EAAErB,CAAC,CAACsB,SAAU;IAAAC,QAAA,GAAC,GAAC,EAACN,aAAa,GAAG,CAAC,iBAAIf,OAAA;MAAQsB,OAAO,EAAGA,CAAA,KAAM;QAACN,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MAAC,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAErIf,KAAK,CAACgB,MAAM,CAAEC,CAAC,IAAIA,CAAC,IAAIX,qBAAqB,IAAIW,CAAC,IAAIV,sBAAsB,CAAC,CAC7EW,GAAG,CAAGD,CAAC,IAAK;MAAE,oBAAO5B,OAAA;QAAMmB,SAAS,EAAEf,WAAW,KAAKwB,CAAC,IAAI9B,CAAC,CAACgC,YAAa;QAASR,OAAO,EAAGS,CAAC,IAAK1B,aAAa,CAACuB,CAAC,CAAE;QAAAP,QAAA,EAAEO;MAAC,GAAvCA,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CAAC;IAAA,CAAC,CAAC,EAEjIZ,YAAY,GAAGC,aAAa,iBAAIf,OAAA;MAAQsB,OAAO,EAAGA,CAAA,KAAM;QAACN,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MAAC,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1G,CAAC;AACP,CAAC;AAAAnB,EAAA,CApBGN,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAsBb,eAAeA,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}