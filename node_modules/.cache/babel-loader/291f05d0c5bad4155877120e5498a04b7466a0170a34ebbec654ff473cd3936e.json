{"ast":null,"code":"import React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../Redux/profileReducer';\nimport MyPosts from './myPosts';\nimport StoreContext from '../../../storeContext';\nimport { connect } from 'react-redux';\n\n/* const MyPostsContainer = (props) => {\n    return (\n        <StoreContext.Consumer>\n            {(store) => {\n                let state = store.getState();\n                let addPost = () => store.dispatch(addPostActionCreator());\n                let onPostChange = (text) => {\n                    let action = updateNewPostTextActionCreator(text)\n                    store.dispatch(action)\n                }\n                return <MyPosts updateNewPostText={onPostChange}\n                    addPost={addPost}\n                    posts={state.profilePage.posts}\n                    newPostText={state.profilePage.newPostText} />\n            }\n        }\n        </StoreContext.Consumer>\n    )\n} */\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => dispatch(addPostActionCreator()),\n    updateNewPostText: text => dispatch(updateNewPostTextActionCreator(text))\n  };\n};\nconst sMyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","StoreContext","connect","mapStateToProps","state","posts","profilePage","newPostText","mapDispatchToProps","dispatch","addPost","updateNewPostText","text","sMyPostsContainer","MyPostsContainer"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPostsContainer.jsx"],"sourcesContent":["import React from 'react'\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../Redux/profileReducer'\nimport MyPosts from './myPosts'\nimport StoreContext from '../../../storeContext'\nimport { connect } from 'react-redux'\n\n/* const MyPostsContainer = (props) => {\n    return (\n        <StoreContext.Consumer>\n            {(store) => {\n                let state = store.getState();\n                let addPost = () => store.dispatch(addPostActionCreator());\n                let onPostChange = (text) => {\n                    let action = updateNewPostTextActionCreator(text)\n                    store.dispatch(action)\n                }\n                return <MyPosts updateNewPostText={onPostChange}\n                    addPost={addPost}\n                    posts={state.profilePage.posts}\n                    newPostText={state.profilePage.newPostText} />\n            }\n        }\n        </StoreContext.Consumer>\n    )\n} */\n\nlet mapStateToProps = (state) => {return{\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n}}\nlet mapDispatchToProps = (dispatch) => {return{\n    addPost:() => dispatch(addPostActionCreator()),\n    updateNewPostText: (text) => dispatch(updateNewPostTextActionCreator(text))\n}}\n\nconst sMyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\nexport default MyPostsContainer"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,8BAA8B,QAAQ,4BAA4B;AACjG,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,uBAAuB;AAChD,SAASC,OAAO,QAAQ,aAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAAC,OAAM;IACpCC,KAAK,EAAED,KAAK,CAACE,WAAW,CAACD,KAAK;IAC9BE,WAAW,EAAEH,KAAK,CAACE,WAAW,CAACC;EACnC,CAAC;AAAA,CAAC;AACF,IAAIC,kBAAkB,GAAIC,QAAQ,IAAK;EAAC,OAAM;IAC1CC,OAAO,EAACA,CAAA,KAAMD,QAAQ,CAACX,oBAAoB,CAAC,CAAC,CAAC;IAC9Ca,iBAAiB,EAAGC,IAAI,IAAKH,QAAQ,CAACV,8BAA8B,CAACa,IAAI,CAAC;EAC9E,CAAC;AAAA,CAAC;AAEF,MAAMC,iBAAiB,GAAGX,OAAO,CAACC,eAAe,EAACK,kBAAkB,CAAC,CAACR,OAAO,CAAC;AAC9E,eAAec,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}