{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport x from \"../../assets/images/test pik.jpeg\";\nimport { connect } from \"react-redux\";\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC } from \"../Redux/usersReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.onPageChenged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n  componentDidMount() {\n    alert(x);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow,\n        onPageChenged: this.onPageChenged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true);\n  }\n}\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: currentPage => {\n      dispatch(setCurrentPageAC(currentPage));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);","map":{"version":3,"names":["React","axios","Users","x","connect","followAC","setUsersAC","unfollowAC","setCurrentPageAC","setTotalUsersCountAC","jsxDEV","_jsxDEV","Fragment","_Fragment","UsersAPIComponent","Component","constructor","args","onPageChenged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","alert","currentPage","setTotalUsersCount","totalCount","render","children","totalUsersCount","users","unfollow","follow","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state","usersPage","isFetching","mapDispatchToProps","dispatch","userId"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\nimport Users from \"./Users\"\nimport x from \"../../assets/images/test pik.jpeg\"\nimport { connect } from \"react-redux\";\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC } from \"../Redux/usersReducer\";\n\nclass UsersAPIComponent extends React.Component {\n\n   componentDidMount() {\n      alert(x)\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n         .then(response => {\n            this.props.setUsers(response.data.items);\n            this.props.setTotalUsersCount(response.data.totalCount);\n         })\n   }\n\n   onPageChenged = (pageNumber) => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n         .then(response => { this.props.setUsers(response.data.items) })\n   }\n\n   render() {\n      return <> <Users\n         totalUsersCount={this.props.totalUsersCount}\n         pageSize={this.props.pageSize}\n         currentPage={this.props.currentPage}\n         users={this.props.users}\n         unfollow={this.props.unfollow}\n         follow={this.props.follow}\n         onPageChenged={this.onPageChenged}\n      /> </>\n   }\n}\nlet mapStateToProps = (state) => {\n   return {\n      users: state.usersPage.users,\n      pageSize: state.usersPage.pageSize,\n      totalUsersCount: state.usersPage.totalUsersCount,\n      currentPage: state.usersPage.currentPage, \n      isFetching: state.usersPage.isFetching, \n\n   }\n};\nlet mapDispatchToProps = (dispatch) => {\n   return {\n      follow: (userId) => {\n         dispatch(followAC(userId))\n      },\n      unfollow: (userId) => {\n         dispatch(unfollowAC(userId))\n      },\n      setUsers: (users) => {\n         dispatch(setUsersAC(users))\n      },\n      setCurrentPage: (currentPage) => {\n         dispatch(setCurrentPageAC(currentPage))\n      },\n      setTotalUsersCount: (totalCount) => {\n         dispatch(setTotalUsersCountAC(totalCount))\n      },\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}