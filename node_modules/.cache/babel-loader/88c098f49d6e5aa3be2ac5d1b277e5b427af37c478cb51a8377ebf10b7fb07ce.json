{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    likesCount: 12,\n    message: \"Hello, BRO\"\n  }, {\n    id: 2,\n    likesCount: 4,\n    message: \"Hello, BRrrrrr\"\n  }, {\n    id: 3,\n    likesCount: 51,\n    message: \"Hell Oy\"\n  }, {\n    id: 4,\n    likesCount: 614,\n    message: \"airuqp ppq uqweh b\"\n  }, {\n    id: 5,\n    likesCount: 111,\n    message: \"It`s my first post!\"\n  }],\n  newPostText: \"fuck!\"\n};\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        message: state.newPostText,\n        likesCount: 0\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n        newPostText: \"\"\n      };\n    // тут зарефакторил еще надо ниже повторить\n    case UPDATE_NEW_POST_TEXT:\n      {\n        let stateCopy = {\n          ...state\n        };\n        stateCopy.newPostText = action.newText;\n        return stateCopy;\n      }\n    default:\n      return state;\n  }\n};\nexport let addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport let updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport default profileReducer;","map":{"version":3,"names":["ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","likesCount","message","newPostText","profileReducer","state","action","type","newPost","stateCopy","newText","addPostActionCreator","updateNewPostTextActionCreator","text"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Redux/profileReducer.js"],"sourcesContent":["const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\n\nlet initialState = {\n  posts: [\n    { id: 1, likesCount: 12, message: \"Hello, BRO\" },\n    { id: 2, likesCount: 4, message: \"Hello, BRrrrrr\" },\n    { id: 3, likesCount: 51, message: \"Hell Oy\" },\n    { id: 4, likesCount: 614, message: \"airuqp ppq uqweh b\" },\n    { id: 5, likesCount: 111, message: \"It`s my first post!\" },\n  ],\n  newPostText: \"fuck!\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        message: state.newPostText,\n        likesCount: 0,\n      };\n      return {...state, posts: [...state.posts, newPost], newPostText: \"\" } // тут зарефакторил еще надо ниже повторить\n    case UPDATE_NEW_POST_TEXT:{\n      let stateCopy = {...state}\n      stateCopy.newPostText = action.newText;\n      return stateCopy;}\n    default:\n      return state;\n  }\n};\n\nexport let addPostActionCreator = () => ({ type: ADD_POST });\nexport let updateNewPostTextActionCreator = (text) => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text,\n});\n\nexport default profileReducer;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAU;AAC3B,MAAMC,oBAAoB,GAAG,sBAAsB;AAEnD,IAAIC,YAAY,GAAG;EACjBC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAa,CAAC,EAChD;IAAEF,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAiB,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAU,CAAC,EAC7C;IAAEF,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAqB,CAAC,EACzD;IAAEF,EAAE,EAAE,CAAC;IAAEC,UAAU,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAsB,CAAC,CAC3D;EACDC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,QAAQ;MACX,IAAIY,OAAO,GAAG;QACZR,EAAE,EAAE,CAAC;QACLE,OAAO,EAAEG,KAAK,CAACF,WAAW;QAC1BF,UAAU,EAAE;MACd,CAAC;MACD,OAAO;QAAC,GAAGI,KAAK;QAAEN,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAK,EAAES,OAAO,CAAC;QAAEL,WAAW,EAAE;MAAG,CAAC;IAAC;IACxE,KAAKN,oBAAoB;MAAC;QACxB,IAAIY,SAAS,GAAG;UAAC,GAAGJ;QAAK,CAAC;QAC1BI,SAAS,CAACN,WAAW,GAAGG,MAAM,CAACI,OAAO;QACtC,OAAOD,SAAS;MAAC;IACnB;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,IAAIM,oBAAoB,GAAGA,CAAA,MAAO;EAAEJ,IAAI,EAAEX;AAAS,CAAC,CAAC;AAC5D,OAAO,IAAIgB,8BAA8B,GAAIC,IAAI,KAAM;EACrDN,IAAI,EAAEV,oBAAoB;EAC1Ba,OAAO,EAAEG;AACX,CAAC,CAAC;AAEF,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}