{"ast":null,"code":"var _jsxFileName = \"/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx\";\nimport React, { Component } from 'react';\nimport Post from './Post/Post';\nimport s from './myPosts.module.css';\nimport { Textarea } from '../../common/FormControls';\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxlength10 = maxLengthCreator(10);\nconst AddNewPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"myPostText\",\n        component: Textarea,\n        validate: [required, maxlength10],\n        placeholder: \"cool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Add Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Post remove \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n};\n_c = AddNewPostForm;\nconst ReactPostsTextArea = reduxForm({\n  form: \"profileAddNewPostForm\"\n})(AddNewPostForm);\n_c2 = ReactPostsTextArea;\nclass MyPosts extends Component {\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        a: 12\n      });\n    }, 3000);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps != this.props || nextState != this.state;\n  }\n  render() {\n    alert(\"my post render\");\n    let postsElements = this.props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n      message: p.message,\n      likesCount: p.likesCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 51\n    }, this));\n    let onAddPost = values => this.props.addPost(values.myPostText);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postsBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Super Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPostsTextArea, {\n        onSubmit: onAddPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.posts,\n        children: postsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default MyPosts;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddNewPostForm\");\n$RefreshReg$(_c2, \"ReactPostsTextArea\");","map":{"version":3,"names":["React","Component","Post","s","Textarea","Field","reduxForm","required","maxLengthCreator","jsxDEV","_jsxDEV","maxlength10","AddNewPostForm","props","onSubmit","handleSubmit","children","name","component","validate","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","ReactPostsTextArea","form","_c2","MyPosts","componentDidMount","setTimeout","setState","a","shouldComponentUpdate","nextProps","nextState","state","render","alert","postsElements","posts","map","p","message","likesCount","onAddPost","values","addPost","myPostText","className","postsBlock","$RefreshReg$"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/components/Profile/MyPosts/myPosts.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport Post from './Post/Post'\nimport s from './myPosts.module.css'\nimport { Textarea } from '../../common/FormControls'\nimport { Field, reduxForm } from \"redux-form\"\nimport { required, maxLengthCreator } from '../../../utilits/validators/validators'\n\n\nconst maxlength10 = maxLengthCreator(10) \n\nconst AddNewPostForm = (props) => {\n    return <form onSubmit={props.handleSubmit} >\n    <div><Field name = 'myPostText' component = {Textarea} validate = {[required , maxlength10]} placeholder = \"cool\" /></div>\n    <div><button> Add Post </button><button> Post remove </button></div>\n    </form>\n}\n\nconst ReactPostsTextArea = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm)\n\n\nclass MyPosts extends Component {\n    componentDidMount(){setTimeout(() => {this.setState({a:12})}, 3000)}\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps != this.props || nextState != this.state\n    }\n    render (){\n    alert(\"my post render\")\n    let postsElements = this.props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />)\n    let onAddPost = (values) => this.props.addPost(values.myPostText)\n\n    return <div className={s.postsBlock}>\n        <h3>My Super Posts</h3>\n       <ReactPostsTextArea onSubmit={onAddPost}/>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n    </div>}\n}\n\nexport default MyPosts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}