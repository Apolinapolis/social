{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    \"API-KEY\": \"1721d0bf-4bc2-4cee-8d7e-6d0004333236\"\n  },\n  withCredentials: true\n});\nexport const usersAPI = {\n  async getUsers(currentPage = 1, pageSize = 10) {\n    const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`);\n    return response.data;\n  },\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  getProfile(userId) {\n    return profileAPI.getProfile(userId);\n  }\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, {\n      email,\n      password,\n      rememberMe\n    });\n  },\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n  // trable? undefind\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  },\n  savePhoto(photoFile) {\n    let formData = new FormData();\n    formData.append(\"image\", photoFile);\n    return instance.put(`profile/photo`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  },\n  saveProfile(profile) {\n    return instance.put(`profile/`, profile);\n  }\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(`security/get-captcha-url`);\n  }\n};","map":{"version":3,"names":["axios","instance","create","baseURL","headers","withCredentials","usersAPI","getUsers","currentPage","pageSize","response","get","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","authAPI","me","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","securityAPI","getCaptchaUrl"],"sources":["/Users/oskvernitel/lernJS/react/legendary-site/src/API/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: { \"API-KEY\": \"1721d0bf-4bc2-4cee-8d7e-6d0004333236\" },\n  withCredentials: true,\n});\n\nexport const usersAPI = {\n  async getUsers(currentPage = 1, pageSize = 10) {\n    const response = await instance.get(\n      `users?page=${currentPage}&count=${pageSize}`\n    );\n    return response.data;\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  getProfile(userId) {\n    return profileAPI.getProfile(userId);\n  },\n};\n\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n  login(email, password, rememberMe = false) {\n    return instance.post(`auth/login`, { email, password, rememberMe });\n  },\n  logout() {\n    return instance.delete(`auth/login`);\n  },\n};\n\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  }, // trable? undefind\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status`, { status: status });\n  },\n  savePhoto(photoFile) {\n    let formData = new FormData();\n    formData.append(\"image\", photoFile);\n    return instance.put(`profile/photo`, formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n  },\n\n  saveProfile(profile) {\n    return instance.put(`profile/`, profile)\n  },\n};\n\n\nexport const securityAPI = { getCaptchaUrl() { return instance.get(`security/get-captcha-url`)} };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAG,+CAA8C;EACxDC,OAAO,EAAE;IAAE,SAAS,EAAE;EAAuC,CAAC;EAC9DC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAG;EACtB,MAAMC,QAAQA,CAACC,WAAW,GAAG,CAAC,EAAEC,QAAQ,GAAG,EAAE,EAAE;IAC7C,MAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACU,GAAG,CAChC,cAAaH,WAAY,UAASC,QAAS,EAC9C,CAAC;IACD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,MAAMA,CAACC,MAAM,EAAE;IACb,OAAOb,QAAQ,CAACc,IAAI,CAAE,UAASD,MAAO,EAAC,CAAC;EAC1C,CAAC;EACDE,QAAQA,CAACF,MAAM,EAAE;IACf,OAAOb,QAAQ,CAACgB,MAAM,CAAE,UAASH,MAAO,EAAC,CAAC;EAC5C,CAAC;EACDI,UAAUA,CAACJ,MAAM,EAAE;IACjB,OAAOK,UAAU,CAACD,UAAU,CAACJ,MAAM,CAAC;EACtC;AACF,CAAC;AAED,OAAO,MAAMM,OAAO,GAAG;EACrBC,EAAEA,CAAA,EAAG;IACH,OAAOpB,QAAQ,CAACU,GAAG,CAAE,SAAQ,CAAC;EAChC,CAAC;EACDW,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,GAAG,KAAK,EAAE;IACzC,OAAOxB,QAAQ,CAACc,IAAI,CAAE,YAAW,EAAE;MAAEQ,KAAK;MAAEC,QAAQ;MAAEC;IAAW,CAAC,CAAC;EACrE,CAAC;EACDC,MAAMA,CAAA,EAAG;IACP,OAAOzB,QAAQ,CAACgB,MAAM,CAAE,YAAW,CAAC;EACtC;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG;EACxBD,UAAUA,CAACJ,MAAM,EAAE;IACjB,OAAOb,QAAQ,CAACU,GAAG,CAAE,UAAS,GAAGG,MAAM,CAAC;EAC1C,CAAC;EAAE;EACHa,SAASA,CAACb,MAAM,EAAE;IAChB,OAAOb,QAAQ,CAACU,GAAG,CAAE,iBAAgB,GAAGG,MAAM,CAAC;EACjD,CAAC;EACDc,YAAYA,CAACC,MAAM,EAAE;IACnB,OAAO5B,QAAQ,CAAC6B,GAAG,CAAE,gBAAe,EAAE;MAAED,MAAM,EAAEA;IAAO,CAAC,CAAC;EAC3D,CAAC;EACDE,SAASA,CAACC,SAAS,EAAE;IACnB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,CAAC;IACnC,OAAO/B,QAAQ,CAAC6B,GAAG,CAAE,eAAc,EAAEG,QAAQ,EAAE;MAC7C7B,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC;EACJ,CAAC;EAEDgC,WAAWA,CAACC,OAAO,EAAE;IACnB,OAAOpC,QAAQ,CAAC6B,GAAG,CAAE,UAAS,EAAEO,OAAO,CAAC;EAC1C;AACF,CAAC;AAGD,OAAO,MAAMC,WAAW,GAAG;EAAEC,aAAaA,CAAA,EAAG;IAAE,OAAOtC,QAAQ,CAACU,GAAG,CAAE,0BAAyB,CAAC;EAAA;AAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}